services:
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: "OFF"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  kafka-init:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-init
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      echo 'Creating Kafka topics...'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic quickstart-events --replication-factor 1 --partitions 3
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic customer-events --replication-factor 1 --partitions 3
      echo 'Topics created successfully!'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

  backend:
    build:
      context: ./server
    container_name: backend
    depends_on:
      - kafka-init
    environment:
      - KAFKA_BROKER_URL=kafka:9092
    ports:
      - "4000:4000"

  kafka-consumer-1:
    build: ./server
    container_name: kafka-consumer-1
    command: node Services/kafka/consumer.kafka.js
    depends_on:
      - kafka-init # Wait for topics to be created
    environment:
      - KAFKA_BROKER_URL=kafka:9092
    restart: unless-stopped

  kafka-consumer-2:
    build: ./server
    container_name: kafka-consumer-2
    command: node Services/kafka/customerDB-consumer.kafka.js
    depends_on:
      - kafka-init # Wait for topics to be created
    environment:
      - KAFKA_BROKER_URL=kafka:9092
    restart: unless-stopped

  frontend:
    build:
      context: ./client
    container_name: frontend
    depends_on:
      - kafka-init
    ports:
      - "3000:3000"
